[{"/home/nicolas/CMPE285_TeamProject/frontend/src/index.js":"1","/home/nicolas/CMPE285_TeamProject/frontend/src/App.js":"2","/home/nicolas/CMPE285_TeamProject/frontend/src/reportWebVitals.js":"3","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Login.js":"4","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/user.js":"5","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Register.js":"6","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/LoginForm.js":"7","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Dashboard.js":"8","/home/nicolas/CMPE285_TeamProject/frontend/src/components/utils/conf.js":"9","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Recomendation.js":"10","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Portfolio.js":"11","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Stocks.js":"12","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/RecomendationsTable.js":"13","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/PortfolioItem.js":"14","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/colors.js":"15"},{"size":478,"mtime":1607524543967,"results":"16","hashOfConfig":"17"},{"size":689,"mtime":1607425981842,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607425981842,"results":"19","hashOfConfig":"17"},{"size":1176,"mtime":1607425981842,"results":"20","hashOfConfig":"17"},{"size":35,"mtime":1607425981842,"results":"21","hashOfConfig":"17"},{"size":2843,"mtime":1607664939924,"results":"22","hashOfConfig":"17"},{"size":2410,"mtime":1607663273511,"results":"23","hashOfConfig":"17"},{"size":1617,"mtime":1607558590406,"results":"24","hashOfConfig":"17"},{"size":116,"mtime":1607665436366,"results":"25","hashOfConfig":"17"},{"size":11081,"mtime":1607664883206,"results":"26","hashOfConfig":"17"},{"size":1276,"mtime":1607664831155,"results":"27","hashOfConfig":"17"},{"size":277,"mtime":1607664898776,"results":"28","hashOfConfig":"17"},{"size":1960,"mtime":1607664895271,"results":"29","hashOfConfig":"17"},{"size":3154,"mtime":1607665231088,"results":"30","hashOfConfig":"17"},{"size":176,"mtime":1607659763615,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4s4e1e",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nicolas/CMPE285_TeamProject/frontend/src/index.js",[],["66","67"],"/home/nicolas/CMPE285_TeamProject/frontend/src/App.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/reportWebVitals.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Login.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/user.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Register.js",["68"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { user } from \"./user\";\nimport { host, port } from \"../utils/conf\";\n\nconst Register = () => {\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    fetch(`http://${host}:${port}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.status == 200) {\n          user.userId = formData.email;\n          user.name = formData.fname + \" \" + formData.lname;\n        }\n        setLoading(false);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  return user.userId ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Fragment>\n      <div\n        className={loading ? \"ui loading segment\" : \"ui segment\"}\n        style={{ background: \"white\" }}\n      >\n        <form className=\"ui form\" onSubmit={onSubmit}>\n          <div className=\"two fields\">\n            <div className=\"required field\">\n              <label>First Name</label>\n              <input\n                name=\"fname\"\n                placeholder=\"First Name\"\n                type=\"text\"\n                onChange={onChange}\n                required\n              />\n            </div>\n\n            <div className=\"required field\">\n              <label>Last Name</label>\n              <input\n                name=\"lname\"\n                placeholder=\"Last Name\"\n                type=\"text\"\n                onChange={onChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"required field\">\n            <label>Email</label>\n            <input\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"email\"\n              autoComplete=\"username\"\n              onChange={onChange}\n              required\n            />\n          </div>\n\n          <div className=\"required field\">\n            <label>Password</label>\n            <input\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              onChange={onChange}\n              required\n            />\n          </div>\n\n          <button className=\"fluid ui primary button\" type=\"submit\">\n            Register Account\n          </button>\n          <Link to=\"/login\">Already have an account? Login</Link>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/LoginForm.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Dashboard.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/utils/conf.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Recomendation.js",["69","70","71"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryLine } from \"victory\";\n\nimport { host, port } from \"../utils/conf\";\n\nimport Wedges from \"../../res/wedges.svg\";\nimport RecomendationsTable from \"./RecomendationsTable\";\nimport { user } from \"../auth/user\";\n\nconst Recomendation = () => {\n  const startegies = [\n    { name: \"Index Investing\", icon: \"hand point up outline\" },\n    { name: \"Quality Investing\", icon: \"gem\" },\n    { name: \"Value Investing\", icon: \"money bill alternate\" },\n    { name: \"Ethical Investing\", icon: \"heart outline\" },\n    { name: \"Growth Investing\", icon: \"chart line\" },\n  ];\n  const [loading, setLoading] = useState(false);\n  const [buying, setBuying] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [ammount, setAmmount] = useState(5000);\n  const [suggestions, setSuggestions] = useState(null);\n  const [chart, setChart] = useState([]);\n  const [chartStocks, setChartStocks] = useState([]);\n  const [historyLength, sethistoryLength] = useState(5);\n\n  useEffect(() => {\n    generateChart();\n  }, [chartStocks, historyLength]);\n\n  const generateChart = () => {\n    let c = chartStocks.reduce((d, stock) => {\n      for (let i = 0; i < historyLength; i++) {\n        if (!d[i]) {\n          d[i] = { x: historyLength - i, y: 0 };\n        }\n        d[i].y += suggestions[stock].historical[i].adjusted_close;\n      }\n      return d;\n    }, []);\n    setChart(c);\n  };\n\n  const updateChart = (stockName, add) => {\n    if (add) {\n      setChartStocks([...chartStocks, stockName]);\n    } else {\n      setChartStocks(chartStocks.filter((stock) => stockName != stock));\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"ui buttom attached segment\">\n        <div className=\"ui form\">\n          <div className=\"ui small header\">Customize your Investment:</div>\n          <div className=\"field\">\n            <label>Choose Investment Strategy: (max 2)</label>\n            <div className=\"ui fluid buttons\">\n              {startegies.map((startegy) => (\n                <div\n                  key={startegy.name}\n                  className={\n                    selected.includes(startegy.name)\n                      ? \"ui animated active fade button\"\n                      : selected.length < 2\n                      ? \"ui animated fade button\"\n                      : \"ui animated disabled fade button\"\n                  }\n                  onClick={() => {\n                    if (selected.includes(startegy.name)) {\n                      setSelected(selected.filter((s) => s !== startegy.name));\n                    } else if (selected.length < 2) {\n                      setSelected([...selected, startegy.name]);\n                    } else {\n                      //do alert\n                    }\n                  }}\n                >\n                  <div className=\"visible content\">{startegy.name}</div>\n                  <div className=\"hidden content\">\n                    <i className={`${startegy.icon} icon`}></i>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>Investment Ammount: ($5000 minimum)</label>\n            <input\n              type=\"Number\"\n              placeholder=\"5000 Minimum\"\n              min=\"5000.00\"\n              step=\"0.01\"\n              value={ammount}\n              onChange={(e) => {\n                setAmmount(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"field\">\n            <div\n              className={\n                ammount >= 5000 && selected.length > 0 && !loading\n                  ? \"ui fluid blue button\"\n                  : \"ui disabled fluid blue button\"\n              }\n              onClick={() => {\n                setLoading(true);\n                setBuying(false);\n                let url = new URL(`http://${host}:${port}/recomendation`);\n                let params = { strategies: selected.join(\",\") };\n                url.search = new URLSearchParams(params).toString();\n                setSuggestions([]);\n                fetch(url)\n                  .then((res) => res.json())\n                  .then((data) => {\n                    console.log(data);\n                    setLoading(false);\n                    setSuggestions(data);\n                    setChartStocks(Object.keys(data));\n                  })\n                  .catch((err) => {\n                    console.error(err);\n                    setLoading(false);\n                    setChartStocks([]);\n                  });\n              }}\n            >\n              Get Suggestion\n            </div>\n          </div>\n        </div>\n      </div>\n      {suggestions || loading ? (\n        loading ? (\n          <div className=\"ui placeholder segment\">\n            <div className=\"ui icon header\">\n              <img className=\"ui image icon\" src={Wedges} />\n              please wait while we crunch the numbers\n            </div>\n          </div>\n        ) : (\n          <div className=\"ui segment\">\n            <div className=\"ui two column grid\">\n              <div className=\"ui column\">\n                <div className=\"ui small centered text\">\n                  select the number of days:\n                  <div className=\"ui buttons\">\n                    <button\n                      className=\"ui button\"\n                      onClick={() => {\n                        sethistoryLength(5);\n                      }}\n                    >\n                      5\n                    </button>\n                    <button\n                      className=\"ui button\"\n                      onClick={() => {\n                        sethistoryLength(10);\n                      }}\n                    >\n                      10\n                    </button>\n                    <button\n                      className=\"ui button\"\n                      onClick={() => {\n                        sethistoryLength(30);\n                      }}\n                    >\n                      30\n                    </button>\n                    <button\n                      className=\"ui button\"\n                      onClick={() => {\n                        sethistoryLength(60);\n                      }}\n                    >\n                      60\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"ui small centered header\">\n                  Historical Trend\n                  <VictoryChart theme={VictoryTheme.material}>\n                    <VictoryLine\n                      animate={{\n                        duration: 2000,\n                        onLoad: { duration: 2000 },\n                      }}\n                      style={{\n                        data: { stroke: \"#c43a31\" },\n                        parent: { border: \"1px solid #ccc\" },\n                      }}\n                      data={chart}\n                    />\n                  </VictoryChart>\n                </div>\n              </div>\n              <div className=\"ui column\">\n                <div className=\"ui small centered header\">\n                  click on the stocks to add or remove them from the trend chart\n                </div>\n                <VictoryPie\n                  colorScale={[\n                    \"green\",\n                    \"tomato\",\n                    \"orange\",\n                    \"gold\",\n                    \"cyan\",\n                    \"navy\",\n                    \"blue\",\n                    \"purple\",\n                    \"brown\",\n                    \"olive\",\n                  ]}\n                  events={[\n                    {\n                      target: \"data\",\n                      eventHandlers: {\n                        onClick: () => {\n                          return [\n                            {\n                              target: \"data\",\n                              mutation: ({ style, datum }) => {\n                                if (\n                                  chartStocks.length > 1 ||\n                                  style.fill === \"#cccccc\"\n                                ) {\n                                  if (style.fill === \"#cccccc\") {\n                                    updateChart(datum.label, true);\n                                  } else {\n                                    updateChart(datum.label, false);\n                                  }\n                                  return style.fill !== \"#cccccc\"\n                                    ? { style: { fill: \"#cccccc\" } }\n                                    : null;\n                                } else {\n                                  return null;\n                                }\n                              },\n                            },\n                          ];\n                        },\n                      },\n                    },\n                  ]}\n                  data={Object.keys(suggestions).map((stock, i) => {\n                    return { x: i, y: suggestions[stock].cost, label: stock };\n                  })}\n                />\n              </div>\n            </div>\n            <RecomendationsTable recs={suggestions} />\n            <div className=\"ui segment\">\n              <div\n                className={\n                  buying\n                    ? buying === \"success\"\n                      ? \"ui fluid disabled green button\"\n                      : \"ui fluid loading disabled green button\"\n                    : \"ui fluid green button\"\n                }\n                onClick={() => {\n                  setBuying(true);\n                  fetch(`http://${host}:${port}/investment`, {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({\n                      email: user.userId,\n                      stocks: Object.keys(suggestions).map((key) => {\n                        let { symbol, price, cost } = suggestions[key];\n                        return { symbol, price, qty: cost / price };\n                      }),\n                    }),\n                  })\n                    .then((res) => res.json())\n                    .then((data) => {\n                      console.log(data);\n                      setBuying(\"success\");\n                    })\n                    .catch((err) => {\n                      console.error(err);\n                      setBuying(false);\n                    });\n                }}\n              >\n                {buying === \"success\" ? \"success\" : \"buy\"}\n              </div>\n            </div>\n          </div>\n        )\n      ) : (\n        <div className=\"ui placeholder segment\">\n          <div className=\"ui icon header\">\n            <i className=\"chart bar outline icon\"></i>\n            select your strategy and investment ammount to get personalized\n            recomendations\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Recomendation;\n","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Portfolio.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Stocks.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/RecomendationsTable.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/PortfolioItem.js",["72","73","74"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { SEGMENT_COLORS } from \"./colors\";\nimport { host, port } from \"../utils/conf\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryLine } from \"victory\";\n\nconst PortfolioItem = ({ item: { stock, avg_cost, qty } }) => {\n  const [color, setColor] = useState(\"\");\n  useEffect(() => {\n    getStockInfo();\n    setColor(SEGMENT_COLORS[Math.floor(Math.random() * SEGMENT_COLORS.length)]);\n  }, []);\n  const [state, setState] = useState(null);\n  const getStockInfo = () => {\n    let url = new URL(`http://${host}:${port}/stock`);\n    let params = { symbol: stock };\n    url.search = new URLSearchParams(params).toString();\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setState(data);\n      })\n      .catch((err) => {\n        console.error(err);\n        setState(null);\n      });\n  };\n  useEffect(() => {\n    let isSubscribed = true;\n    setTimeout(() => {\n      isSubscribed && getStockInfo();\n    }, 30000);\n    return () => {\n      isSubscribed = false;\n    };\n  }, [state]);\n  return (\n    <div className=\"item\">\n      <div className={`ui ${color} segment`}>\n        <div className=\"right floated content\">\n          {state && (\n            <Fragment>\n              <div className=\"ui mini statistics\">\n                <div className=\"statistic\">\n                  <div className=\"value\">{state.current_price}</div>\n                  <div className=\"label\">USD</div>\n                </div>\n                {state.increase_dollars > 0 ? (\n                  <div className=\"green statistic\">\n                    <div className=\"value\">\n                      <i className=\"long arrow alternate up icon\"></i>\n                      {`${state.increase_dollars} (${state.increase_percent}%)`}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"red statistic\">\n                    <div className=\"value\">\n                      <i className=\"long arrow alternate down icon\"></i>\n                      {`${state.increase_dollars} (${state.increase_percent}%)`}\n                    </div>\n                  </div>\n                )}\n              </div>\n              <VictoryChart theme={VictoryTheme.material}>\n                <VictoryLine\n                  animate={{\n                    duration: 500,\n                    onLoad: { duration: 500 },\n                  }}\n                  style={{\n                    data: { stroke: \"#c43a31\" },\n                    parent: { border: \"1px solid #ccc\" },\n                  }}\n                  data={state.historical.map((day, i) => {\n                    return {\n                      x: state.historical.length - i,\n                      y: day[\"adjusted_close\"],\n                    };\n                  })}\n                />\n              </VictoryChart>\n            </Fragment>\n          )}\n        </div>\n        <div className=\"header\">{stock}</div>\n        <div className=\"content\">{`average cost: $${avg_cost}`}</div>\n        <div className=\"content\">{`quantity: ${qty}`}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioItem;\n","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/colors.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":27,"column":25,"nodeType":"81","messageId":"82","endLine":27,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":29,"column":6,"nodeType":"85","endLine":29,"endColumn":34,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"87","line":48,"column":62,"nodeType":"81","messageId":"82","endLine":48,"endColumn":64},{"ruleId":"88","severity":1,"message":"89","line":140,"column":15,"nodeType":"90","endLine":140,"endColumn":61},{"ruleId":"91","severity":1,"message":"92","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":20},{"ruleId":"83","severity":1,"message":"95","line":11,"column":6,"nodeType":"85","endLine":11,"endColumn":8,"suggestions":"96"},{"ruleId":"83","severity":1,"message":"95","line":35,"column":6,"nodeType":"85","endLine":35,"endColumn":13,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateChart'. Either include it or remove the dependency array.","ArrayExpression",["100"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'VictoryPie' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getStockInfo'. Either include it or remove the dependency array.",["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [chartStocks, generateChart, historyLength]",{"range":"109","text":"110"},"Update the dependencies array to be: [getStockInfo]",{"range":"111","text":"112"},"Update the dependencies array to be: [getStockInfo, state]",{"range":"113","text":"114"},[1118,1146],"[chartStocks, generateChart, historyLength]",[461,463],"[getStockInfo]",[1069,1076],"[getStockInfo, state]"]