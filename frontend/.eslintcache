[{"/home/nicolas/CMPE285_TeamProject/frontend/src/index.js":"1","/home/nicolas/CMPE285_TeamProject/frontend/src/App.js":"2","/home/nicolas/CMPE285_TeamProject/frontend/src/reportWebVitals.js":"3","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Login.js":"4","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/user.js":"5","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Register.js":"6","/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/LoginForm.js":"7","/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Dashboard.js":"8"},{"size":478,"mtime":1607416251086,"results":"9","hashOfConfig":"10"},{"size":689,"mtime":1607420114156,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607372835850,"results":"12","hashOfConfig":"10"},{"size":1176,"mtime":1607418831122,"results":"13","hashOfConfig":"10"},{"size":35,"mtime":1607416995760,"results":"14","hashOfConfig":"10"},{"size":2690,"mtime":1607420372893,"results":"15","hashOfConfig":"10"},{"size":1873,"mtime":1607419018384,"results":"16","hashOfConfig":"10"},{"size":4888,"mtime":1607425364991,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4s4e1e",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/home/nicolas/CMPE285_TeamProject/frontend/src/index.js",[],["36","37"],"/home/nicolas/CMPE285_TeamProject/frontend/src/App.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/reportWebVitals.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Login.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/user.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/Register.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/auth/LoginForm.js",[],"/home/nicolas/CMPE285_TeamProject/frontend/src/components/Dashboard/Dashboard.js",["38","39"],"import React, { Fragment, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n//import { LineChart, XAxis, Tooltip, CartesianGrid, Line } from \"recharts\";\n\nimport { VictoryBar, VictoryPie } from \"victory\";\nimport { user } from \"../auth/user\";\n\nconst Dashboard = () => {\n  const startegies = [\n    { name: \"Index Investing\", icon: \"hand point up outline\" },\n    { name: \"Quality Investing\", icon: \"gem\" },\n    { name: \"Value Investing\", icon: \"money bill alternate\" },\n    { name: \"Ethical Investing\", icon: \"heart outline\" },\n    { name: \"Growth Investing\", icon: \"chart line\" },\n  ];\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [ammount, setAmmount] = useState(5000);\n  const [suggestions, setSuggestions] = useState(null);\n  return !user.userId ? (\n    <Redirect to=\"/login\" />\n  ) : (\n    <Fragment>\n      <div className=\"ui segment\">\n        <div className=\"ui form\">\n          <div className=\"ui small header\">Customize your Investment:</div>\n          <div className=\"field\">\n            <label>Choose Investment Strategy: (max 2)</label>\n            <div className=\"ui fluid buttons\">\n              {startegies.map((startegy) => (\n                <div\n                  key={startegy.name}\n                  className={\n                    selected.includes(startegy.name)\n                      ? \"ui animated active fade button\"\n                      : selected.length < 2\n                      ? \"ui animated fade button\"\n                      : \"ui animated disabled fade button\"\n                  }\n                  onClick={() => {\n                    if (selected.includes(startegy.name)) {\n                      setSelected(selected.filter((s) => s !== startegy.name));\n                    } else if (selected.length < 2) {\n                      setSelected([...selected, startegy.name]);\n                    } else {\n                      //do alert\n                    }\n                  }}\n                >\n                  <div className=\"visible content\">{startegy.name}</div>\n                  <div className=\"hidden content\">\n                    <i className={`${startegy.icon} icon`}></i>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>Investment Ammount: ($5000 minimum)</label>\n            <input\n              type=\"Number\"\n              placeholder=\"5000 Minimum\"\n              min=\"5000.00\"\n              step=\"0.01\"\n              value={ammount}\n              onChange={(e) => {\n                setAmmount(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"field\">\n            <div\n              className={\n                ammount >= 5000 && selected.length > 0\n                  ? \"ui fluid blue button\"\n                  : \"ui disabled fluid blue button\"\n              }\n              onClick={() => {\n                setSuggestions({});\n              }}\n            >\n              Get Suggestion\n            </div>\n          </div>\n        </div>\n      </div>\n      {suggestions && (\n        <div className=\"ui short segment\">\n          <div className=\"ui two column grid\">\n            <div className=\"ui column\">\n              <VictoryBar\n                data={[\n                  { x: 1, y: 2, label: \"A\" },\n                  { x: 2, y: 4, label: \"B\" },\n                  { x: 3, y: 7, label: \"C\" },\n                  { x: 4, y: 3, label: \"D\" },\n                  { x: 5, y: 5, label: \"E\" },\n                ]}\n                events={[\n                  {\n                    target: \"data\",\n                    eventHandlers: {\n                      onClick: () => {\n                        return [\n                          {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return props.text === \"clicked\"\n                                ? null\n                                : { text: \"clicked\" };\n                            },\n                          },\n                        ];\n                      },\n                    },\n                  },\n                ]}\n              />\n            </div>\n            <div className=\"ui column\">\n              <VictoryPie />\n            </div>\n          </div>\n\n          {/* <LineChart\n          width={400}\n          height={400}\n          data={data}\n          margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n        >\n          <XAxis dataKey=\"name\" />\n          <Tooltip />\n          <CartesianGrid stroke=\"#f5f5f5\" />\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n        </LineChart> */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":16,"column":10,"nodeType":"46","messageId":"47","endLine":16,"endColumn":17},{"ruleId":"44","severity":1,"message":"48","line":16,"column":19,"nodeType":"46","messageId":"47","endLine":16,"endColumn":29},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]