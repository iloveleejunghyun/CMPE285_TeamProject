{"version":3,"sources":["components/auth/user.js","components/auth/LoginForm.js","components/auth/Login.js","components/auth/Register.js","components/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["user","userId","LoginForm","props","useState","email","password","formData","setFormData","onSubmit","e","a","preventDefault","setLoading","setTimeout","onChange","target","name","value","className","style","minWidth","type","placeholder","autoComplete","Login","loading","to","background","Register","fname","lname","console","log","required","Dashboard","selected","setSelected","ammount","setAmmount","suggestions","setSuggestions","icon","map","startegy","includes","length","onClick","filter","s","min","step","data","x","y","label","events","eventHandlers","mutation","text","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.366fbdf6.chunk.js","sourcesContent":["export const user = {userId: null};","import React, {Fragment, useState} from 'react'\nimport {user} from './user'\n\nconst LoginForm = (props) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n      });\n    \n      const { email, password } = formData;\n    \n      const onSubmit = async e => {\n        e.preventDefault();\n        props.setLoading(true);\n        setTimeout(() => {\n            user.userId = \"test@email.com\";\n            props.setLoading(false);\n        }, 1000);\n      };\n    \n      const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n      };\n    \n      return (\n        <Fragment>\n          <div className=\"ui medium header\">\n            Sign Into Your Account\n          </div>\n          <form className=\"ui form\" onSubmit={onSubmit}>\n            <div className=\"grouped fields\">\n              <div className=\" required field\" style={{ minWidth: '100%' }}>\n                <label>Email:</label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={email}\n                  onChange={onChange}\n                  autoComplete=\"username\"\n                />\n              </div>\n              <div className=\"required field\" style={{ minWidth: '100%' }}>\n                <label>Passwrod</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Enter your password\"\n                  value={password}\n                  onChange={onChange}\n                  autoComplete=\"current-password\"\n                />\n              </div>\n            </div>\n            <button className=\"fluid ui primary button\" type=\"submit\">\n              Log In\n            </button>\n          </form>\n        </Fragment>\n      );\n}\n\nexport default LoginForm\n","import React, {Fragment, useState} from 'react'\nimport { Redirect, Link } from 'react-router-dom';\n\nimport LoginForm from './LoginForm'\nimport {user} from './user'\n\nconst Login = () => {\n    const [loading, setLoading] = useState(false)\n    return user.userId ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Fragment>\n          <div\n            className={\n              loading\n                ? 'ui loading placeholder segment'\n                : 'ui placeholder segment'\n            }\n            style={{ background: 'white' }}\n          >\n            <div className=\"ui two column very relaxed stackable grid\">\n              <div className=\"column\">\n                <LoginForm setLoading={setLoading} />\n              </div>\n              <div className=\"middle aligned column\">\n                <Link to=\"/register\">\n                  <div className=\"ui big button\">\n                    <i className=\"signup icon\" />\n                    Sign Up\n                  </div>\n                </Link>\n              </div>\n            </div>\n    \n            <div className=\"ui vertical divider\">Or</div>\n          </div>\n        </Fragment>\n      );\n}\n\nexport default Login\n","import React, {Fragment, useState} from 'react'\nimport { Link, Redirect } from 'react-router-dom';\n\nimport {user} from './user'\n\nconst Register = () => {\n    const [loading, setLoading] = useState(false)\n    const [formData, setFormData] = useState({\n        fname: '',\n        lname: '',\n        email: '',\n        password: ''\n      });\n      const onSubmit = e => {\n        e.preventDefault();\n        \n        setLoading(true);\n        setTimeout(() => {\n            user.userId = \"test@email.com\";\n            setLoading(false);\n        }, 1000);\n        console.log(formData);\n      };\n    \n      const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n      };\n      return user.userId ? (\n          <Redirect to=\"/\" />\n        ) : (\n        <Fragment>\n            <div\n                className={\n                  loading\n                    ? 'ui loading segment'\n                    : 'ui segment'\n                }\n                style={{ background: 'white' }}\n              >\n        <form className=\"ui form\" onSubmit={onSubmit}>\n          <div className=\"two fields\">\n            <div className=\"required field\">\n              <label>First Name</label>\n              <input\n                name=\"fname\"\n                placeholder=\"First Name\"\n                type=\"text\"\n                onChange={onChange}\n                required\n              />\n            </div>\n    \n            <div className=\"required field\">\n              <label>Last Name</label>\n              <input\n                name=\"lname\"\n                placeholder=\"Last Name\"\n                type=\"text\"\n                onChange={onChange}\n                required\n              />\n            </div>\n          </div>\n    \n          <div className=\"required field\">\n            <label>Email</label>\n            <input\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"email\"\n              autoComplete=\"username\"\n              onChange={onChange}\n              required\n            />\n          </div>\n    \n          <div className=\"required field\">\n            <label>Password</label>\n            <input\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              onChange={onChange}\n              required\n            />\n          </div>\n    \n          <button className=\"fluid ui primary button\" type=\"submit\">\n            Register Account\n          </button>\n          <Link to='/login'>Already have an account? Login</Link>\n        </form>\n        </div>\n        </Fragment>\n      );\n}\n\nexport default Register\n","import React, { Fragment, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n//import { LineChart, XAxis, Tooltip, CartesianGrid, Line } from \"recharts\";\n\nimport { VictoryBar, VictoryPie } from \"victory\";\nimport { user } from \"../auth/user\";\n\nconst Dashboard = () => {\n  const startegies = [\n    { name: \"Index Investing\", icon: \"hand point up outline\" },\n    { name: \"Quality Investing\", icon: \"gem\" },\n    { name: \"Value Investing\", icon: \"money bill alternate\" },\n    { name: \"Ethical Investing\", icon: \"heart outline\" },\n    { name: \"Growth Investing\", icon: \"chart line\" },\n  ];\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [ammount, setAmmount] = useState(5000);\n  const [suggestions, setSuggestions] = useState(null);\n  return !user.userId ? (\n    <Redirect to=\"/login\" />\n  ) : (\n    <Fragment>\n      <div className=\"ui segment\">\n        <div className=\"ui form\">\n          <div className=\"ui small header\">Customize your Investment:</div>\n          <div className=\"field\">\n            <label>Choose Investment Strategy: (max 2)</label>\n            <div className=\"ui fluid buttons\">\n              {startegies.map((startegy) => (\n                <div\n                  key={startegy.name}\n                  className={\n                    selected.includes(startegy.name)\n                      ? \"ui animated active fade button\"\n                      : selected.length < 2\n                      ? \"ui animated fade button\"\n                      : \"ui animated disabled fade button\"\n                  }\n                  onClick={() => {\n                    if (selected.includes(startegy.name)) {\n                      setSelected(selected.filter((s) => s !== startegy.name));\n                    } else if (selected.length < 2) {\n                      setSelected([...selected, startegy.name]);\n                    } else {\n                      //do alert\n                    }\n                  }}\n                >\n                  <div className=\"visible content\">{startegy.name}</div>\n                  <div className=\"hidden content\">\n                    <i className={`${startegy.icon} icon`}></i>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"field\">\n            <label>Investment Ammount: ($5000 minimum)</label>\n            <input\n              type=\"Number\"\n              placeholder=\"5000 Minimum\"\n              min=\"5000.00\"\n              step=\"0.01\"\n              value={ammount}\n              onChange={(e) => {\n                setAmmount(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"field\">\n            <div\n              className={\n                ammount >= 5000 && selected.length > 0\n                  ? \"ui fluid blue button\"\n                  : \"ui disabled fluid blue button\"\n              }\n              onClick={() => {\n                setSuggestions({});\n              }}\n            >\n              Get Suggestion\n            </div>\n          </div>\n        </div>\n      </div>\n      {suggestions && (\n        <div className=\"ui short segment\">\n          <div className=\"ui two column grid\">\n            <div className=\"ui column\">\n              <VictoryBar\n                data={[\n                  { x: 1, y: 2, label: \"A\" },\n                  { x: 2, y: 4, label: \"B\" },\n                  { x: 3, y: 7, label: \"C\" },\n                  { x: 4, y: 3, label: \"D\" },\n                  { x: 5, y: 5, label: \"E\" },\n                ]}\n                events={[\n                  {\n                    target: \"data\",\n                    eventHandlers: {\n                      onClick: () => {\n                        return [\n                          {\n                            target: \"labels\",\n                            mutation: (props) => {\n                              return props.text === \"clicked\"\n                                ? null\n                                : { text: \"clicked\" };\n                            },\n                          },\n                        ];\n                      },\n                    },\n                  },\n                ]}\n              />\n            </div>\n            <div className=\"ui column\">\n              <VictoryPie />\n            </div>\n          </div>\n\n          {/* <LineChart\n          width={400}\n          height={400}\n          data={data}\n          margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n        >\n          <XAxis dataKey=\"name\" />\n          <Tooltip />\n          <CartesianGrid stroke=\"#f5f5f5\" />\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n        </LineChart> */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Dashboard;\n","import React, {Fragment} from 'react'\nimport './App.css';\n// routing\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <Router>\n    <Fragment>\n      <section className=\"ui container mt-5\">\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n        </Switch>\n      </section>\n    </Fragment>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}